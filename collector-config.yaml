receivers:
  prometheus_simple:
    collection_interval: 60s
    endpoint: "kube-state-metrics:8080"
    metrics_path: "/metrics"
    tls:
      insecure: true
      insecure_skip_verify: true
processors:
  batch:
    send_batch_max_size: 1000
    timeout: 30s
    send_batch_size: 800
  memory_limiter:
    check_interval: 1s
    limit_percentage: 70
    spike_limit_percentage: 30
  resource/1:
    attributes:
      - key: service.name
        action: delete
      - key: net.host.name
        action: delete
      - key: service.instance.id
        action: delete
      - key: net.host.port
        action: delete
      - key: http.scheme
        action: delete
  attributes/1:
    actions:
      - key: container_runtime_version
        action: delete
      - key: host_ip
        action: delete
      - key: host_network
        action: delete
      - key: pod_ip
        action: delete
      - key: internal_ip
        action: delete
      - key: kernel_version
        action: delete
      - key: kubelet_version
        action: delete
      - key: kubeproxy_version
        action: delete
      - key: os_image
        action: delete
      - key: priority_class
        action: delete
      - key: label_pod_template_hash
        action: delete
      - key: label_controller_revision_hash
        action: delete
      - key: label_pod_template_generation
        action: delete
      - key: label_beta_kubernetes_io_arch
        action: delete
      - key: label_beta_kubernetes_io_os
        action: delete
      - key: label_eks_amazonaws_com_nodegroup_image
        action: delete
      - key: label_kubernetes_io_arch
        action: delete
      - key: label_failure_domain_beta_kubernetes_io_region
        action: delete
      - key: label_failure_domain_beta_kubernetes_io_zone
        action: delete
      - key: label_kubernetes_io_os
        action: delete
      - key: label_kubernetes_io_hostnamea
        action: delete
  metricstransform/add:
    transforms:
      - include: .*
        match_type: regexp
        action: update
        operations:
          - action: add_label
            new_label: doit.com/metrics-deployment-id
            new_value: "${doit_metrics_deployment_id}"
      - include: kube_pod_init_container_resource_requests
        action: update
        operations:
          - action: add_label
            new_label: metrics_name
            new_value: init_resource_requests
      - include: kube_pod_init_container_resource_limits
        action: update
        operations:
          - action: add_label
            new_label: metrics_name
            new_value: init_resource_limits
      - include: kube_pod_init_container_status_running
        action: update
        operations:
          - action: add_label
            new_label: metrics_name
            new_value: init_container_running
      - include: kube_pod_info
        action: update
        operations:
          - action: add_label
            new_label: metrics_name
            new_value: pod_info
      - include: kube_pod_container_status_running
        action: update
        operations:
          - action: add_label
            new_label: metrics_name
            new_value: container_running
      - include: kube_pod_container_resource_requests
        action: update
        operations:
          - action: add_label
            new_label: metrics_name
            new_value: resource_requests
      - include: kube_pod_container_resource_limits
        action: update
        operations:
          - action: add_label
            new_label: metrics_name
            new_value: resource_limits
      - include: kube_pod_labels
        action: update
        operations:
          - action: add_label
            new_label: metrics_name
            new_value: pod_labels
      - include: kube_node_info
        action: update
        operations:
          - action: add_label
            new_label: metrics_name
            new_value: node_info
      - include: kube_node_labels
        action: update
        operations:
          - action: add_label
            new_label: metrics_name
            new_value: node_labels
  filter/1:
    metrics:
      include:
        match_type: strict
        metric_names:
          - kube_pod_init_container_resource_limits
          - kube_pod_init_container_resource_requests
          - kube_pod_init_container_status_running
          - kube_pod_info
          - kube_pod_labels
          - kube_pod_container_status_running
          - kube_pod_container_resource_limits
          - kube_pod_container_resource_requests
          - kube_node_info
          - kube_node_labels
exporters:
  # logging:
  #   loglevel: debug
  awss3:
    s3uploader:
      region: "${region}"
      s3_bucket: "${collector_bucket_name}"
      s3_prefix: "${collector_bucket_prefix}"
      file_prefix: $${K8S_NODE_NAME}
      s3_partition: "minute"
extensions:
  memory_ballast:
    size_in_percentage: 20
  health_check: {}
service:
  telemetry:
    metrics:
      address: ":8888"
  extensions: [memory_ballast, health_check]
  pipelines:
    metrics:
      receivers: [prometheus_simple]
      processors:
        [
          resource/1,
          filter/1,
          attributes/1,
          metricstransform/add,
          memory_limiter,
          batch,
        ]
      exporters: [awss3]
